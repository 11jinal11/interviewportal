{"ast":null,"code":"// import React from 'react'\n// import PropTypes from 'prop-types';\n// import AppBar from '@mui/material/AppBar';\n// import Box from '@mui/material/Box';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import Divider from '@mui/material/Divider';\n// import Drawer from '@mui/material/Drawer';\n// import IconButton from '@mui/material/IconButton';\n// import SpaceDashboardIcon from '@mui/icons-material/SpaceDashboard';\n// import CategoryIcon from '@mui/icons-material/Category';\n// import ControlPointDuplicateIcon from '@mui/icons-material/ControlPointDuplicate';\n// import List from '@mui/material/List';\n// import ListItem from '@mui/material/ListItem';\n// import ListItemButton from '@mui/material/ListItemButton';\n// import ListItemIcon from '@mui/material/ListItemIcon';\n// import ListItemText from '@mui/material/ListItemText';\n// import HelpOutlineIcon from '@mui/icons-material/HelpOutline';\n// import MenuIcon from '@mui/icons-material/Menu';\n// import Toolbar from '@mui/material/Toolbar';\n// import Typography from '@mui/material/Typography';\n// import MeetingRoomIcon from '@mui/icons-material/MeetingRoom';\n// import { Link } from '@mui/material';\n\n// const drawerWidth = 240;\n// const InteviewPortal = ({children}) => {\n//     // const { window } = props;\n//   const [mobileOpen, setMobileOpen] = React.useState(false);\n//   const [isClosing, setIsClosing] = React.useState(false);\n\n//   const handleDrawerClose = () => {\n//     setIsClosing(true);\n//     setMobileOpen(false);\n//   };\n\n//   const handleDrawerTransitionEnd = () => {\n//     setIsClosing(false);\n//   };\n\n//   const handleDrawerToggle = () => {\n//     if (!isClosing) {\n//       setMobileOpen(!mobileOpen);\n//     }\n//   };\n\n//   const list = [{name : 'Dashboard' , path : '/dashboard' , icon : <SpaceDashboardIcon />} , {name : 'Category' , path : '/categary' , icon : <CategoryIcon />} , {name : 'SubCategory' , path : '/subcategory' , icon : <ControlPointDuplicateIcon />} , {name : 'Q&A' , path : '/qa' , icon : <HelpOutlineIcon />}]\n\n//   const drawer = (\n//     <div>\n//     <Toolbar sx={{color:'white',backgroundColor:'#1976D2',padding:'5px'}}>\n\n//           <Typography variant=\"h6\" noWrap component=\"div\">\n//           𝐈𝐧𝐭𝐞𝐫𝐯𝐢𝐞𝐰 𝐏𝐨𝐫𝐭𝐚𝐥\n\n//           </Typography>\n//         </Toolbar>\n\n//       <Divider />\n//       <List>\n//         {list.map((text, index) => (\n//           <Link sx={{textDecoration:'none'}} href={text.path}>\n//             <ListItem key={text} disablePadding>\n//             <ListItemButton>\n//               <ListItemIcon>\n//                   { text.icon}\n//               </ListItemIcon>\n//               <ListItemText primary={text.name} />\n//             </ListItemButton>\n//           </ListItem>\n//           </Link>\n//         ))}\n//       </List>\n//       <Divider />\n//       {/* <List>\n//         {['All mail', 'Trash', 'Spam'].map((text, index) => (\n//           <ListItem key={text} disablePadding>\n//             <ListItemButton>\n//               <ListItemIcon>\n//                 {index % 2 === 0 ? <SpaceDashboardIcon /> : <MailIcon />}\n//               </ListItemIcon>\n//               <ListItemText primary={text} />\n//             </ListItemButton>\n//           </ListItem>\n//         ))}\n//       </List> */}\n//     </div>\n//   );\n\n//   // Remove this const when copying and pasting into your project.\n//   // const container = window !== undefined ? () => window().document.body : undefined;\n//   return (\n//     <Box sx={{ display: 'flex' }}>\n//       <CssBaseline />\n//       <AppBar\n//         position=\"fixed\"\n//         sx={{\n//           width: { sm: `calc(100% - ${drawerWidth}px)` },\n//           ml: { sm: `${drawerWidth}px` },\n//         }}\n//       >\n//         <Toolbar sx={{justifyContent:'space-between'}}>\n//           <IconButton\n//             color=\"inherit\"\n//             aria-label=\"open drawer\"\n//             edge=\"start\"\n//             onClick={handleDrawerToggle}\n//             sx={{ mr:2 ,display: { sm: 'none' } }}\n//           >\n//             <MenuIcon />\n//           </IconButton>\n//           <Typography sx={{fontSize:'16px'}}variant=\"h6\" noWrap component=\"div\">\n//           Dashboard\n//           </Typography>\n//       <MeetingRoomIcon/>\n//         </Toolbar>\n//       </AppBar>\n//       <Box\n//         component=\"nav\"\n//         sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\n//         aria-label=\"mailbox folders\"\n//       >\n//         {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n//         <Drawer\n//           // container={container}\n//           variant=\"temporary\"\n//           open={mobileOpen}\n//           onTransitionEnd={handleDrawerTransitionEnd}\n//           onClose={handleDrawerClose}\n//           ModalProps={{\n//             keepMounted: true, // Better open performance on mobile.\n//           }}\n//           sx={{ textDecoration:'none! important',\n//             display: { xs: 'block', sm: 'none' },\n//             '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\n//           }}\n//         >\n//           {drawer}\n//         </Drawer>\n//         <Drawer\n//           variant=\"permanent\"\n//           sx={{\n//             display: { xs: 'none', sm: 'block' },\n//             '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },textDecoration:'none',\n//           }}\n//           open\n//         >\n//           {drawer}\n//         </Drawer>\n//       </Box>\n//       <Box\n//         component=\"main\"\n//         sx={{ flexGrow: 1, p: 3, width: { sm: `calc(100% - ${drawerWidth}px)` } }}\n//       >\n//         <Toolbar />\n//         {children}\n//       </Box>\n\n//     </Box>\n//   );\n// }\n\n// InteviewPortal.propTypes = {\n//   /**\n//    * Injected by the documentation to work in an iframe.\n//    * Remove this when copying and pasting into your project.\n//    */\n//   window: PropTypes.func,\n// };\n\n// export default InteviewPortal","map":{"version":3,"names":[],"sources":["C:/adminpannel (2)/src/pages/InteviewPortal.jsx"],"sourcesContent":["  // import React from 'react'\r\n  // import PropTypes from 'prop-types';\r\n  // import AppBar from '@mui/material/AppBar';\r\n  // import Box from '@mui/material/Box';\r\n  // import CssBaseline from '@mui/material/CssBaseline';\r\n  // import Divider from '@mui/material/Divider';\r\n  // import Drawer from '@mui/material/Drawer';\r\n  // import IconButton from '@mui/material/IconButton';\r\n  // import SpaceDashboardIcon from '@mui/icons-material/SpaceDashboard';\r\n  // import CategoryIcon from '@mui/icons-material/Category';\r\n  // import ControlPointDuplicateIcon from '@mui/icons-material/ControlPointDuplicate';\r\n  // import List from '@mui/material/List';\r\n  // import ListItem from '@mui/material/ListItem';\r\n  // import ListItemButton from '@mui/material/ListItemButton';\r\n  // import ListItemIcon from '@mui/material/ListItemIcon';\r\n  // import ListItemText from '@mui/material/ListItemText';\r\n  // import HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\n  // import MenuIcon from '@mui/icons-material/Menu';\r\n  // import Toolbar from '@mui/material/Toolbar';\r\n  // import Typography from '@mui/material/Typography';\r\n  // import MeetingRoomIcon from '@mui/icons-material/MeetingRoom';\r\n  // import { Link } from '@mui/material';\r\n\r\n  // const drawerWidth = 240;\r\n  // const InteviewPortal = ({children}) => {\r\n  //     // const { window } = props;\r\n  //   const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  //   const [isClosing, setIsClosing] = React.useState(false);\r\n\r\n  //   const handleDrawerClose = () => {\r\n  //     setIsClosing(true);\r\n  //     setMobileOpen(false);\r\n  //   };\r\n\r\n  //   const handleDrawerTransitionEnd = () => {\r\n  //     setIsClosing(false);\r\n  //   };\r\n\r\n  //   const handleDrawerToggle = () => {\r\n  //     if (!isClosing) {\r\n  //       setMobileOpen(!mobileOpen);\r\n  //     }\r\n  //   };\r\n\r\n  //   const list = [{name : 'Dashboard' , path : '/dashboard' , icon : <SpaceDashboardIcon />} , {name : 'Category' , path : '/categary' , icon : <CategoryIcon />} , {name : 'SubCategory' , path : '/subcategory' , icon : <ControlPointDuplicateIcon />} , {name : 'Q&A' , path : '/qa' , icon : <HelpOutlineIcon />}]\r\n\r\n  //   const drawer = (\r\n  //     <div>\r\n  //     <Toolbar sx={{color:'white',backgroundColor:'#1976D2',padding:'5px'}}>\r\n            \r\n  //           <Typography variant=\"h6\" noWrap component=\"div\">\r\n  //           𝐈𝐧𝐭𝐞𝐫𝐯𝐢𝐞𝐰 𝐏𝐨𝐫𝐭𝐚𝐥\r\n        \r\n  //           </Typography>\r\n  //         </Toolbar>\r\n        \r\n  //       <Divider />\r\n  //       <List>\r\n  //         {list.map((text, index) => (\r\n  //           <Link sx={{textDecoration:'none'}} href={text.path}>\r\n  //             <ListItem key={text} disablePadding>\r\n  //             <ListItemButton>\r\n  //               <ListItemIcon>\r\n  //                   { text.icon}\r\n  //               </ListItemIcon>\r\n  //               <ListItemText primary={text.name} />\r\n  //             </ListItemButton>\r\n  //           </ListItem>\r\n  //           </Link>\r\n  //         ))}\r\n  //       </List>\r\n  //       <Divider />\r\n  //       {/* <List>\r\n  //         {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n  //           <ListItem key={text} disablePadding>\r\n  //             <ListItemButton>\r\n  //               <ListItemIcon>\r\n  //                 {index % 2 === 0 ? <SpaceDashboardIcon /> : <MailIcon />}\r\n  //               </ListItemIcon>\r\n  //               <ListItemText primary={text} />\r\n  //             </ListItemButton>\r\n  //           </ListItem>\r\n  //         ))}\r\n  //       </List> */}\r\n  //     </div>\r\n  //   );\r\n\r\n  //   // Remove this const when copying and pasting into your project.\r\n  //   // const container = window !== undefined ? () => window().document.body : undefined;\r\n  //   return (\r\n  //     <Box sx={{ display: 'flex' }}>\r\n  //       <CssBaseline />\r\n  //       <AppBar\r\n  //         position=\"fixed\"\r\n  //         sx={{\r\n  //           width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n  //           ml: { sm: `${drawerWidth}px` },\r\n  //         }}\r\n  //       >\r\n  //         <Toolbar sx={{justifyContent:'space-between'}}>\r\n  //           <IconButton\r\n  //             color=\"inherit\"\r\n  //             aria-label=\"open drawer\"\r\n  //             edge=\"start\"\r\n  //             onClick={handleDrawerToggle}\r\n  //             sx={{ mr:2 ,display: { sm: 'none' } }}\r\n  //           >\r\n  //             <MenuIcon />\r\n  //           </IconButton>\r\n  //           <Typography sx={{fontSize:'16px'}}variant=\"h6\" noWrap component=\"div\">\r\n  //           Dashboard\r\n  //           </Typography>\r\n  //       <MeetingRoomIcon/>\r\n  //         </Toolbar>\r\n  //       </AppBar>\r\n  //       <Box\r\n  //         component=\"nav\"\r\n  //         sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n  //         aria-label=\"mailbox folders\"\r\n  //       >\r\n  //         {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n  //         <Drawer\r\n  //           // container={container}\r\n  //           variant=\"temporary\"\r\n  //           open={mobileOpen}\r\n  //           onTransitionEnd={handleDrawerTransitionEnd}\r\n  //           onClose={handleDrawerClose}\r\n  //           ModalProps={{\r\n  //             keepMounted: true, // Better open performance on mobile.\r\n  //           }}\r\n  //           sx={{ textDecoration:'none! important',\r\n  //             display: { xs: 'block', sm: 'none' },\r\n  //             '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n  //           }}\r\n  //         >\r\n  //           {drawer}\r\n  //         </Drawer>\r\n  //         <Drawer\r\n  //           variant=\"permanent\"\r\n  //           sx={{\r\n  //             display: { xs: 'none', sm: 'block' },\r\n  //             '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },textDecoration:'none',\r\n  //           }}\r\n  //           open\r\n  //         >\r\n  //           {drawer}\r\n  //         </Drawer>\r\n  //       </Box>\r\n  //       <Box\r\n  //         component=\"main\"\r\n  //         sx={{ flexGrow: 1, p: 3, width: { sm: `calc(100% - ${drawerWidth}px)` } }}\r\n  //       >\r\n  //         <Toolbar />\r\n  //         {children}\r\n  //       </Box>\r\n        \r\n  //     </Box>\r\n  //   );\r\n  // }\r\n\r\n  // InteviewPortal.propTypes = {\r\n  //   /**\r\n  //    * Injected by the documentation to work in an iframe.\r\n  //    * Remove this when copying and pasting into your project.\r\n  //    */\r\n  //   window: PropTypes.func,\r\n  // };\r\n    \r\n\r\n  // export default InteviewPortal\r\n\r\n  "],"mappings":"AAAE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}