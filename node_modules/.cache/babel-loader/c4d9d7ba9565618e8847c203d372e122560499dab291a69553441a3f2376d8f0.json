{"ast":null,"code":"var _jsxFileName = \"C:\\\\adminpannel (2)\\\\src\\\\pages\\\\DashBoard.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport CardActionArea from '@mui/material/CardActionArea';\nimport InteviewPortal from \"./InteviewPortal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashBoard = () => {\n  _s();\n  // Example data\n  const categories = [{\n    id: 1,\n    name: 'Category 1',\n    subCategories: ['Sub1', 'Sub2']\n  }, {\n    id: 2,\n    name: 'Category 2',\n    subCategories: ['Sub1']\n  }];\n  const questionsAndAnswers = [{\n    id: 1,\n    question: 'Question 1',\n    answer: 'Answer 1'\n  }, {\n    id: 2,\n    question: 'Question 2',\n    answer: 'Answer 2'\n  }, {\n    id: 3,\n    question: 'Question 3',\n    answer: 'Answer 3'\n  }];\n\n  // Calculate the totals\n  const totalCategories = categories.length;\n  const totalSubCategories = categories.reduce((total, category) => total + category.subCategories.length, 0);\n  const totalQuestionsAndAnswers = questionsAndAnswers.length;\n\n  // Cards data with dynamic totals\n  const cards = [{\n    id: 1,\n    title: 'Total Category',\n    description: totalCategories\n  }, {\n    id: 2,\n    title: 'Total Sub Category',\n    description: totalSubCategories\n  }, {\n    id: 3,\n    title: 'Total Q / A',\n    description: totalQuestionsAndAnswers\n  }];\n  const [selectedCard, setSelectedCard] = React.useState(0);\n  return /*#__PURE__*/_jsxDEV(InteviewPortal, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fill, minmax(min(300px, 100%), 1fr))',\n        gap: 2\n      },\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          onClick: () => setSelectedCard(index),\n          \"data-active\": selectedCard === index ? '' : undefined,\n          sx: {\n            height: '100%',\n            '&[data-active]': {\n              backgroundColor: 'action.selected',\n              '&:hover': {\n                backgroundColor: 'action.selectedHover'\n              }\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              height: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"div\",\n              sx: {\n                justifyContent: 'center',\n                display: 'flex'\n              },\n              children: card.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              color: \"text.secondary\",\n              sx: {\n                justifyContent: 'center',\n                display: 'flex'\n              },\n              children: card.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(DashBoard, \"0aZi4fCP2yKaaEKirOReGXHDGZI=\");\n_c = DashBoard;\nexport default DashBoard;\nvar _c;\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"names":["React","Box","Card","CardContent","Typography","CardActionArea","InteviewPortal","jsxDEV","_jsxDEV","DashBoard","_s","categories","id","name","subCategories","questionsAndAnswers","question","answer","totalCategories","length","totalSubCategories","reduce","total","category","totalQuestionsAndAnswers","cards","title","description","selectedCard","setSelectedCard","useState","children","sx","width","display","gridTemplateColumns","gap","map","card","index","onClick","undefined","height","backgroundColor","variant","component","justifyContent","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","$RefreshReg$"],"sources":["C:/adminpannel (2)/src/pages/DashBoard.jsx"],"sourcesContent":["import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardActionArea from '@mui/material/CardActionArea';\r\nimport InteviewPortal from \"./InteviewPortal\";\r\n\r\nconst DashBoard = () => {\r\n  // Example data\r\n  const categories = [\r\n    { id: 1, name: 'Category 1', subCategories: ['Sub1', 'Sub2'] },\r\n    { id: 2, name: 'Category 2', subCategories: ['Sub1'] },\r\n  ];\r\n\r\n  const questionsAndAnswers = [\r\n    { id: 1, question: 'Question 1', answer: 'Answer 1' },\r\n    { id: 2, question: 'Question 2', answer: 'Answer 2' },\r\n    { id: 3, question: 'Question 3', answer: 'Answer 3' },\r\n  ];\r\n\r\n  // Calculate the totals\r\n  const totalCategories = categories.length;\r\n  const totalSubCategories = categories.reduce((total, category) => total + category.subCategories.length, 0);\r\n  const totalQuestionsAndAnswers = questionsAndAnswers.length;\r\n\r\n  // Cards data with dynamic totals\r\n  const cards = [\r\n    { id: 1, title: 'Total Category', description: totalCategories },\r\n    { id: 2, title: 'Total Sub Category', description: totalSubCategories },\r\n    { id: 3, title: 'Total Q / A', description: totalQuestionsAndAnswers },\r\n  ];\r\n\r\n  const [selectedCard, setSelectedCard] = React.useState(0);\r\n\r\n  return (\r\n    <InteviewPortal>\r\n      <Box\r\n        sx={{\r\n          width: '100%',\r\n          display: 'grid',\r\n          gridTemplateColumns: 'repeat(auto-fill, minmax(min(300px, 100%), 1fr))',\r\n          gap: 2,\r\n        }}\r\n      >\r\n        {cards.map((card, index) => (\r\n          <Card key={card.id}>\r\n            <CardActionArea\r\n              onClick={() => setSelectedCard(index)}\r\n              data-active={selectedCard === index ? '' : undefined}\r\n              sx={{\r\n                height: '100%',\r\n                '&[data-active]': {\r\n                  backgroundColor: 'action.selected',\r\n                  '&:hover': {\r\n                    backgroundColor: 'action.selectedHover',\r\n                  },\r\n                },\r\n              }}\r\n            >\r\n              <CardContent sx={{ height: '100%' }}>\r\n                <Typography variant=\"h5\" component=\"div\" sx={{ justifyContent: 'center', display: 'flex' }}>\r\n                  {card.title}\r\n                </Typography>\r\n                <Typography variant=\"h3\" color=\"text.secondary\" sx={{ justifyContent: 'center', display: 'flex' }}>\r\n                  {card.description}\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n          </Card>\r\n        ))}\r\n      </Box>\r\n    </InteviewPortal>\r\n  );\r\n};\r\n\r\nexport default DashBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}